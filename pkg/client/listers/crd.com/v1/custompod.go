/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/kamolhasan/CRD/pkg/apis/crd.com/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CustomPodLister helps list CustomPods.
type CustomPodLister interface {
	// List lists all CustomPods in the indexer.
	List(selector labels.Selector) (ret []*v1.CustomPod, err error)
	// CustomPods returns an object that can list and get CustomPods.
	CustomPods(namespace string) CustomPodNamespaceLister
	CustomPodListerExpansion
}

// customPodLister implements the CustomPodLister interface.
type customPodLister struct {
	indexer cache.Indexer
}

// NewCustomPodLister returns a new CustomPodLister.
func NewCustomPodLister(indexer cache.Indexer) CustomPodLister {
	return &customPodLister{indexer: indexer}
}

// List lists all CustomPods in the indexer.
func (s *customPodLister) List(selector labels.Selector) (ret []*v1.CustomPod, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CustomPod))
	})
	return ret, err
}

// CustomPods returns an object that can list and get CustomPods.
func (s *customPodLister) CustomPods(namespace string) CustomPodNamespaceLister {
	return customPodNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomPodNamespaceLister helps list and get CustomPods.
type CustomPodNamespaceLister interface {
	// List lists all CustomPods in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.CustomPod, err error)
	// Get retrieves the CustomPod from the indexer for a given namespace and name.
	Get(name string) (*v1.CustomPod, error)
	CustomPodNamespaceListerExpansion
}

// customPodNamespaceLister implements the CustomPodNamespaceLister
// interface.
type customPodNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomPods in the indexer for a given namespace.
func (s customPodNamespaceLister) List(selector labels.Selector) (ret []*v1.CustomPod, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CustomPod))
	})
	return ret, err
}

// Get retrieves the CustomPod from the indexer for a given namespace and name.
func (s customPodNamespaceLister) Get(name string) (*v1.CustomPod, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("custompod"), name)
	}
	return obj.(*v1.CustomPod), nil
}
